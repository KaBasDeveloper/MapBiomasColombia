/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var inclusion = /* color: #3614d6 */ee.FeatureCollection([]),
    exclusion = /* color: #ff0000 */ee.FeatureCollection([]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
var param = {
  pais:  'COLOMBIA',
  region: 30201,   //region clasificacion mapa general 
  type: 'acumulado',
  cover: 11,
  referencias: [  //Comentar las capas que no se quieran acumular
   // Capas de colección 3
   //   'mapbiomas-id-11-acumulado', 'mapbiomas-id-11-estables',
   // Capas globales
   //   'cifor', 'nasa_100m', 'tootchi', 'gfplain250',
   // Capas Colombia
     'col_ref_inundable11_raisg',// 'col_ref_inundable11_noraisg',         
   // Capas Ecuador
   //  'ecu_ref_inundable11_raisg', 
   // Capas Peru
   //  'per_ref_inundable11_raisg', 'per_ref_inundable11_noraisg', 
  ],
  Incluir_exluir : {   // Para Incluir o exluir 
        inclusion: inclusion,
        exclusion: exclusion,
  },
  frecuenRef : 1,
  version: '1'
};

// inputs
 
var stableFlooded = ee.Image("projects/mapbiomas-raisg/DATOS_AUXILIARES/RASTERS/wetlands-stables-3"),
    stableWetland = ee.Image("projects/mapbiomas-raisg/DATOS_AUXILIARES/RASTERS/wetlands-stables-11"),
    raisg = ee.FeatureCollection("projects/mapbiomas-raisg/DATOS_AUXILIARES/VECTORES/limite-raisg-2"),
    sheds = ee.FeatureCollection("projects/mapbiomas-raisg/DATOS_AUXILIARES/VECTORES/CuencasOttoN3"),
    regions = ee.FeatureCollection("projects/mapbiomas-raisg/DATOS_AUXILIARES/VECTORES/clasificacion-regiones-inundable-4"),
    accumulatedWetland = ee.Image("projects/mapbiomas-raisg/DATOS_AUXILIARES/RASTERS/wetlands-accumulated-11"),
    accumulatedFlooded = ee.Image("projects/mapbiomas-raisg/DATOS_AUXILIARES/RASTERS/wetlands-accumulated-3"),
    cifor = ee.Image("projects/mapbiomas-raisg/DATOS_AUXILIARES/RASTERS/TROP-SUBTROP_PeatV21_2016_CIFOR"),
    nasa_100m = ee.Image("projects/mapbiomas-raisg/DATOS_AUXILIARES/RASTERS/LBA_Amazon_wetland_dual-season_veg_flood_AA100m"),
    nasa_3arcsec = ee.Image("projects/mapbiomas-raisg/DATOS_AUXILIARES/RASTERS/LBA_Amazon_wetland_dual-season_veg_flood_3arcsec"),
    global_tootchi = ee.Image("projects/mapbiomas-raisg/DATOS_AUXILIARES/RASTERS/CW_TCI"),
    wwf = ee.FeatureCollection("projects/mapbiomas-raisg/DATOS_AUXILIARES/VECTORES/wwf_terr_ecos"),
    gfplain250 = ee.ImageCollection("projects/sat-io/open-datasets/GFPLAIN250"),
    per_ref_inundable11_noraisg = ee.Image("projects/mapbiomas-raisg/DATOS_AUXILIARES/RASTERS/PERU/per_ref_inundable11_noraisg"),
    col_ref_inundable11_raisg = ee.Image("projects/mapbiomas-raisg/DATOS_AUXILIARES/RASTERS/COLOMBIA/col_ref_inunFul_Sirgas20001"),
    col_ref_inundable11_noraisg = ee.Image("projects/mapbiomas-raisg/DATOS_AUXILIARES/RASTERS/COLOMBIA/col_ref_inundable11_noraisg"),
    per_ref_inundable11_raisg = ee.Image("projects/mapbiomas-raisg/DATOS_AUXILIARES/RASTERS/per_inundables_MINAM2018"),
    // ecu_ref_inundable11_raisg = ee.Image("projects/mapbiomas-raisg/DATOS_AUXILIARES/RASTERS/ECUADOR/ecu_ref_inundable11_raisg"),

    inclusion = /* color: #3614d6 */ee.FeatureCollection([]),
    exclusion = /* color: #ff0000 */ee.FeatureCollection([]);

/**
 * Inclu exclu
 */
var inclus_exclu = function(capa, inclu, exclu){
         var inclusionRegions=  ee.FeatureCollection(inclu).reduceToImage(['value'], ee.Reducer.first())
                       .eq(1)
         var exclusionRegions=  ee.FeatureCollection(exclu).reduceToImage(['value'], ee.Reducer.first())
                       .eq(1)
         capa = capa.where(exclusionRegions.eq(1), 0).selfMask()        
         capa = ee.Image(0).where(capa.eq(1), 1)
                           .where(inclusionRegions.eq(1), 1).selfMask()
                           
  return capa
};


function NamecountryCase (name){
          var paisLowerCase =''
          switch (name) {
            case "PERU":
                paisLowerCase = 'Perú';
                break;
            case "GUIANA_FRANCESA":
                paisLowerCase = 'Guiana Francesa';
                break;
            case "VENEZUELA":
                paisLowerCase = 'Venezuela';
                break;
            case "GUYANA":
                paisLowerCase = 'Guyana';
                break;
            case "COLOMBIA":
                paisLowerCase = 'Colombia';
                break;
            case "BRASIL":
                paisLowerCase = 'Brasil';
                break;
            case "ECUADOR":
                paisLowerCase = 'Ecuador';
                break;
            case "SURINAME":
                paisLowerCase = 'Suriname';
                break;
            case "BOLIVIA":
                paisLowerCase = 'Bolivia'
            }
  return paisLowerCase
}
var country = NamecountryCase(param.pais);
var type = param.type;
sheds = sheds.filterBounds(raisg);

var assetCountries = 'projects/mapbiomas-raisg/DATOS_AUXILIARES/VECTORES/paises-4';
var assetCountriesRaster = "projects/mapbiomas-raisg/DATOS_AUXILIARES/RASTERS/paises-4";
var assetRegionClasVector = 'projects/mapbiomas-raisg/DATOS_AUXILIARES/VECTORES/COLOMBIA/ClasificacionRegionesInundables';
var regionClas = ee.FeatureCollection(assetRegionClasVector)
      .filter(ee.Filter.eq('id_regionC', param.region));
      
var setVersion = function(item) { return item.set('version', 1) };
var regionMask = regionClas
  .map(setVersion)
  .reduceToImage(['version'], ee.Reducer.first());
  
// var regionMask = ee.Image(assetRegionClasVector).eq(param.region).selfMask()
Map.addLayer(regionMask,{},'regionMask',false)
/**
 * Regions
 */
var region = regions.filter(ee.Filter.eq('pais', country));


/**
 * Stable pixels
 */
stableWetland = stableWetland.updateMask(regionMask).eq(1).selfMask();
accumulatedWetland = accumulatedWetland.updateMask(regionMask).eq(1).selfMask();
// stableWetland = stableWetland.clip(region).eq(1).selfMask();
// accumulatedWetland = accumulatedWetland.clip(region).eq(1).selfMask();
cifor = cifor.updateMask(regionMask).eq(1).selfMask();
nasa_100m = nasa_100m.updateMask(regionMask).updateMask(nasa_100m.gt(1)).updateMask(nasa_100m.neq(200));
nasa_3arcsec = nasa_3arcsec.updateMask(regionMask).updateMask(nasa_3arcsec.gt(1)).updateMask(nasa_3arcsec.neq(200));
global_tootchi = global_tootchi.updateMask(regionMask).updateMask(global_tootchi.gt(1));
wwf = wwf.filterBounds(region);
gfplain250 = gfplain250.mosaic().updateMask(regionMask);
per_ref_inundable11_noraisg = per_ref_inundable11_noraisg.updateMask(regionMask);
col_ref_inundable11_raisg = col_ref_inundable11_raisg.updateMask(regionMask);
col_ref_inundable11_noraisg = col_ref_inundable11_noraisg.updateMask(regionMask);
per_ref_inundable11_raisg = per_ref_inundable11_raisg.remap([1,2,3,4],[11,6,6,11]).updateMask(regionMask);
// ecu_ref_inundable11_raisg = ecu_ref_inundable11_raisg.updateMask(regionMask);

var ref_stableWetland = stableWetland.eq(1).rename('mapbiomas-id-11-estables');
var ref_accumulatedWetland = accumulatedWetland.eq(1).rename('mapbiomas-id-11-acumulado');
var ref_cifor = cifor.eq(1).rename('cifor');
var ref_nasa_100m = nasa_100m.gte(23).rename('nasa_100m');
var ref_global_tootchi = global_tootchi.gte(1).rename('tootchi');
// var ref_wwf = wwf.filterBounds(region);
var ref_gfplain250 = gfplain250.gte(0).rename('gfplain250');
var ref_peru11_noraisg = per_ref_inundable11_noraisg.eq(1).rename('per_ref_inundable11_noraisg');
var ref_peru11_raisg = per_ref_inundable11_raisg.eq(11).rename('per_ref_inundable11_raisg');
var ref_colombia11_raisg = col_ref_inundable11_raisg.eq(1).rename('col_ref_inundable11_raisg');
var ref_colombia11_noraisg = col_ref_inundable11_noraisg.eq(1).rename('col_ref_inundable11_noraisg');
// var ref_ecuador11_raisg = ecu_ref_inundable11_raisg.gte(0).rename('ecu_ref_inundable11_raisg');

var ACUMULADO_TOTAL = ee.Image(0).addBands(ref_stableWetland)
                                 .addBands(ref_accumulatedWetland)
                                 .addBands(ref_cifor)
                                 .addBands(ref_nasa_100m)
                                 .addBands(ref_global_tootchi)
                                 .addBands(ref_gfplain250)
                                 .addBands(ref_peru11_raisg)
                                 .addBands(ref_peru11_noraisg)
                                 .addBands(ref_colombia11_raisg)
                                 .addBands(ref_colombia11_noraisg)
                                // .addBands(ref_ecuador11_raisg)
                                 .updateMask(regionMask);
                                 

/**
 * Visualizations
 */
Map.setOptions('SATELLITE');

var palette = require('users/mapbiomas/modules:Palettes.js').get('classification2');

Map.addLayer(
  ref_accumulatedWetland,
  {
    palette: [palette[0], palette[11]]
  },
  'AccumulatedWetland-col3', false);

Map.addLayer(
  ref_stableWetland,
  {
    palette: [palette[0], palette[11]]
  },
  'StableWetland-col3', false);


Map.addLayer(
  cifor,
  { min: 0,  max: 1,  palette: 'bb09e8' },
  'Cifor-2017',false
);

Map.addLayer(
  nasa_100m,
  { min: 0, max: 100, palette: 'e8502e,63ff21,27c2f0,562dff,bb09e8' },
  'WCS_100m',false
);


Map.addLayer(
  global_tootchi,
  { min: 0, max: 4, palette: 'e8502e,63ff21,27c2f0,562dff,bb09e8' },
  'Tootchi-2017',false
);

Map.addLayer(
  gfplain250,
  { palette:"#002B4D" },
  'GlobalFloodPlain250M-2019',false
);

Map.addLayer(
  per_ref_inundable11_noraisg,
  { palette:"#002C7D" },
  'Peru-11-referencia No RAISG',false
);

Map.addLayer(
  ref_peru11_raisg.multiply(11).selfMask(), 
  {min:0, max:34, palette: palette}, 
  'Peru-11-referencia RAISG', false
);


Map.addLayer(
  col_ref_inundable11_raisg,
  { palette:"#007C7D" },
  'Colombia-11-referencia RAISG',false
);

Map.addLayer(
  col_ref_inundable11_noraisg,
  { palette:"#007C7D" },
  'Colombia-11-referencia No RAISG',false
);

// Map.addLayer(
//   ecu_ref_inundable11_raisg, 
//   {palette:'#ff3b00'}, 
//   'Ecuador-11-referencia RAISG', false
// );

// Map.addLayer(ACUMULADO_TOTAL,{},'ACUMULADO_TOTAL',false)
print(ACUMULADO_TOTAL.bandNames())

var ACUMULADO_TOTAL_sel = ACUMULADO_TOTAL.select(param.referencias).reduce('sum').updateMask(regionMask).selfMask();

Map.addLayer(
    ACUMULADO_TOTAL_sel,//.reproject('EPSG:4326', null, 30),
    {min:0, max:param.referencias.length,palette:['fff829','ffce45','ff920a','ff6e19','ff0000','b30000']},
    'ROI based on layer selection', true
  );
  
var CapaRef= ACUMULADO_TOTAL_sel.gte(param.frecuenRef).updateMask(regionMask).selfMask();

CapaRef = inclus_exclu(CapaRef, param.Incluir_exluir.inclusion, param.Incluir_exluir.exclusion);

Map.addLayer(
    CapaRef,//.reproject('EPSG:4326', null, 30),
    {palette:['f107df']},
    'ROI based on layer selection export', true
  );
  
Export.image.toAsset({
  image: CapaRef,
  description:'WETLAND-'+ 'ROI' + '-'+ param.pais + '-'+ param.region + '-'+ param.version,
  assetId:'projects/mapbiomas-raisg/MUESTRAS/'+param.pais+'/COLECCION5/TRANSVERSALES/INUNDABLE/STEP1_ROI/'+ 'WETLAND-'+ 'ROI' + '-'+ param.pais + '-'+ param.region + '-'+ param.version,
  scale: 30,
  pyramidingPolicy: {
    '.default': 'mode'
  },
  maxPixels: 1e13,
  region: regionClas.geometry().bounds()
});